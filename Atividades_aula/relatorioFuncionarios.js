// üß© Exerc√≠cio: Relat√≥rio de Funcion√°rios Ativos
// üíº Cen√°rio:
// Voc√™ recebeu um array com dados de funcion√°rios de uma empresa. Cada funcion√°rio tem:
// nome, idade, sal√°rio, ativo (boolean)
// Seu objetivo √© gerar um relat√≥rio final com os nomes dos funcion√°rios ativos, com sal√°rios ajustados com b√¥nus de 10%, e exibir uma mensagem personalizada no console para cada um.
// üß™ Requisitos:
// Filtrar apenas os funcion√°rios ativos
// Mapear os funcion√°rios para aplicar um b√¥nus de 10% no sal√°rio
// ForEach para exibir no console uma mensagem do tipo:
// Parab√©ns, Jo√£o! Seu novo sal√°rio com b√¥nus √© R$5500.00
// üì• Dados de entrada:

const funcionarios = [
  { nome: 'Jo√£o', idade: 30, salario: 5000, ativo: true },
  { nome: 'Ana', idade: 22, salario: 3200, ativo: false },
  { nome: 'Carlos', idade: 28, salario: 4000, ativo: true },
  { nome: 'Marina', idade: 35, salario: 6000, ativo: false },
  { nome: 'Fernanda', idade: 25, salario: 3800, ativo: true }
];

const filtrarFuncionarios = funcionarios.filter(funcionario => funcionario.ativo === true)
// console.log("funcionarios filtrados", filtrarFuncionarios)

const aplicarDesconto = filtrarFuncionarios.map((funcionario) => {
    calculoBonus = funcionario.salario * 0.1
    salarioFinal = (funcionario.salario + calculoBonus).toFixed(2)
    return {
        nome: funcionario.nome,
        idade: funcionario.idade,
        salarioComBonus: salarioFinal,
        ativo: funcionario.ativo
    }
})
// console.log("funcionarios mapeados e com b√¥nus", aplicarDesconto)

const exibirFuncionariosComDesconto = aplicarDesconto.forEach((funcionario) => {
    console.log(`Parab√©ns, ${funcionario.nome}! Seu novo sal√°rio com b√¥nus √© ${funcionario.salarioComBonus}`)
})

